name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'
      
env:
  DB_NAME: ${{ vars.DB_NAME }}
  DB_PASS: ${{vars.DB_PASS}}
  DB_USER: ${{vars.DB_USER}}
  MYSQL_ROOT_PASSWORD: ${{vars.MYSQL_ROOT_PASSWORD}}
  JWT_SECRET: ${{vars.JWT_SECRET}}

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node: ['20.0.0']

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node }}
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: npm ci
      - name: ESLint
        run: npm run lint
      - name: Prettier
        run: npm run format
      - name: Build the docker-compose stack
        run: docker-compose up -d 
      - name: Sleep for 30 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '40s'
      - name: Check running containers
        run: docker ps -a
      - name: Test
        run: npm run test
      - name: Build
        run: npm run build
